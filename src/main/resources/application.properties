spring.application.name=real-time-chat
# ===============================
# H2 DATABASE CONFIGURATION
# ===============================
# Enable the H2 web console, which is a great tool for development
spring.h2.console.enabled=true
# Set the path for the H2 console. The default is /h2-console.
# You can access it at http://localhost:8080/h2-console
spring.h2.console.path=/h2-console

# ===============================
# DATASOURCE CONFIGURATION
# ===============================
# The JDBC URL for the H2 in-memory database.
# 'jdbc:h2:mem' specifies an in-memory instance.
# 'chatappdb' is the name we're giving to our database instance.
spring.datasource.url=jdbc:h2:mem:chatappdb
# The fully qualified name of the JDBC driver. Spring Boot can often infer this,
# but it's good practice to be explicit.
spring.datasource.driverClassName=org.h2.Driver
# The default username for the H2 database; sa(System administrator): default superuser for H2
spring.datasource.username=sa
# A simple password for the H2 database (for development purposes only).
spring.datasource.password=password

# ===============================
# JPA / HIBERNATE CONFIGURATION
# ===============================
# Specifies the SQL dialect for Hibernate to use. This tells Hibernate
# how to translate its standard operations into SQL specific to the H2 database.

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#Above is Optional : Newer spring version can auto-detect H2 dialect


# This is a critical property for development. 'ddl-auto' stands for Data Definition Language automation.
# 'update' tells Hibernate to compare the JPA entities in our code with the database schema
# and automatically add new tables, columns, or constraints as needed when the app starts.
# Other options: 'create' (drops and recreates db on start), 'validate' (throws error on mismatch), 'none'.
# **In-short due to below line Hibernate reads entity classes and generates corresponding 'Create Table' commands for us
spring.jpa.hibernate.ddl-auto=update

# A very useful property for development. When true, Hibernate will print all
# the generated SQL queries to the console. This lets you see exactly what the
# database operations are doing behind the scenes.
spring.jpa.show-sql=true
